<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd

	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd">

	<context:annotation-config />
	<context:component-scan base-package="com.jjshome.*"/>

    <!--  定时器开关  结束--> 
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
	 	<property name="fileEncoding" value="UTF-8"></property>
		<property name="locations">
			<list>
				<value>classpath:jdbc_conf.properties</value>
			</list>
		</property>
    </bean>

	<!-- 定义数据源 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		  init-method="init" destroy-method="close">
		<!-- 链接地址、用户名、密码 -->
		<property name="url" value="${jdbc.url}"/>
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
		<!-- 初始、最大、最小连接数 -->
		<property name="initialSize" value="${db.ws.initialSize:10}"/>
		<property name="maxActive" value="${db.ws.maxActive:100}"/>
		<property name="minIdle" value="${db.ws.minIdle:10}"/>
		<!-- 获取连接等待超时的时间 -->
		<property name="maxWait" value="${db.ws.maxWait:60000}"/>
		<!-- 间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="${db.ws.timeBetweenEvictionRunsMillis:60000}"/>
		<!-- 连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="${db.ws.minEvictableIdleTimeMillis:300000}"/>
		<property name="validationQuery" value="${db.ws.validationQuery:SELECT 'x'}"/>
		<property name="testWhileIdle" value="${db.ws.testWhileIdle:true}"/>
		<property name="testOnBorrow" value="${db.ws.testOnBorrow:true}"/>
		<property name="testOnReturn" value="${db.ws.testOnReturn:false}"/>
		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements" value="${db.ws.poolPreparedStatements:false}"/>
		<property name="maxPoolPreparedStatementPerConnectionSize"
				  value="${db.ws.maxPoolPreparedStatementPerConnectionSize:0}"/>
		<!-- 配置监控统计拦截的filters -->
		<property name="filters" value="${db.ws.filters:}"/>
		<!-- 启用自动关闭长时间不使用连接的功能（怀疑存在连接泄漏时启用） -->
		<property name="removeAbandoned" value="${db.ws.removeAbandoned:false}"/>
		<!-- 自动关闭超过1800秒未关闭的连接 -->
		<property name="removeAbandonedTimeout" value="${db.ws.removeAbandonedTimeout:1800}"/>
		<!-- 关闭abanded连接时输出错误日志 -->
		<property name="logAbandoned" value="${db.ws.logAbandoned:true}"/>
		<property name="connectionProperties" value="${db_props:config.decrypt=false}"/>
	</bean>
	
	<!-- spring and mybatis 集成 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:sql-map-config.xml" />
		<property name="mapperLocations">
			<list>
				<value>classpath:com/jjshome/jjstool/dao/**/*DAO.xml</value>
			</list>
		</property>
	</bean>

	<!-- 配置ws库相关所有DAO -->
	<bean name="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
		<property name="basePackage" value="com.jjshome.jjstool.dao" />
	</bean>

	<!-- 由spring管理mybatis的事务 -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<!-- 事务通知 -->
	<tx:advice id="myAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="query*" propagation="SUPPORTS" />
			<tx:method name="select*" propagation="SUPPORTS" />
			<tx:method name="*" propagation="NOT_SUPPORTED" />
		</tx:attributes>
	</tx:advice>
	
	<!-- 切面配置 -->
	<aop:config expose-proxy="true">
		<aop:pointcut id="mycut"
			expression="execution(* com.jjshome.jjstool.service..*.*(..))" />
		<aop:advisor advice-ref="myAdvice" pointcut-ref="mycut" />
	</aop:config>

	<!-- 设置事务的annotation生效 -->
	<tx:annotation-driven/>

	<!-- 启动Spring AOP -->
	<aop:aspectj-autoproxy/>
</beans>
